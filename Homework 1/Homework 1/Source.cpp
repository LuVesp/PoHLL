/* Вариант 17.
1. Опишите класс «Уравнение».
Данные класса :
пусть уравнение задано квадратичной функцией y = a x2 + b x + c, тогда его данные, это коэффициенты уравнения.
Конструкторы класса :
конструктор по умолчанию, конструктор произвольной параболы.
2. Определите методы :
ввод коэффициентов уравнения, вывод на экран, проверка на равенство нулю коэффициента а, нахождение корней уравнения.
3. Объявите несколько уравнений как статические объекты, найдите их корни.
4. Объявите динамический объект по умолчанию, введите данные и выведите на экран, найдите корни уравнения.
5. Объявите массив из 2 - 3 уравнений.Найдите способ присвоить им значения при создании объектов. */

#include <iostream>									
#include <locale>
#include "Header.h"

using namespace std;

void main(void)
{
	setlocale(LC_ALL, ".1251");
	float x1, x2;
	Uravnenie A;
	A.Input();
	Uravnenie B  (1, -11, 18 );
	cout << "\n";
	A.Out();
	B.Out();
	cout << "\n";

	if (A.Korni(x1, x2) == 0)
		cout << "x1 = " << x1 << " x1 = " << x2 << "\n";
	else
		cout << "Уравнение не имеет действительных корней! \n";
	if (B.Korni(x1, x2) == 0)
		cout << "x1 = " << x1 << " x2 = " << x2 << "\n";
	else
		cout << "Уравнение не имеет действительных корней! \n";
	cout << "\n";

	Uravnenie* C;
	C = new Uravnenie;
	C = new Uravnenie(1, -11, 18);
	C->Out();
	if (C->Korni(x1, x2) == 0)
		cout << "x1 = " << x1 << " x2 = " << x2 << "\n";
	else
		cout << "Уравнение не имеет действительных корней! \n";
	cout << "\n";

	Uravnenie D[2] = { Uravnenie(3,4,5), Uravnenie(3,3,3) };
	D[0].Out();
	D[1].Out();
	cout << "\n";

	system("pause");
}